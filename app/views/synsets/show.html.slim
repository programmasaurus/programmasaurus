.row-fluid
  .span12
    ul.inline
      - @synset.lemmas.each_slice(ApplicationHelper::COLOR_CLASSES.size) do |lemmas|
        - lemmas.each_with_index do |lemma, index|
          li
            h1 class=color_class(index)
              = link_to lemma_path(@synset.id, lemma: lemma), class: "pull-left #{color_class(index)}" do
               = lemma
              - if signed_in? && current_user.words.for_lemma(@synset.id, lemma).count > 0
                span.pull-right.counter
                  = current_user.words.for_lemma(@synset.id, lemma).count
    = render partial: "shared/gloss"
    = render partial: "shared/other_definitions"
.row-fluid
  .span6

      - if @synset.hypernyms.present?
        h5 Less specific
        ol
          - @synset.hypernyms.each do |hypernym|
            - cycle("asbestos", "midnight-blue")
            li class=current_cycle
              ul.inline
                - hypernym.lemmas.each do |lemma|
                  li
                    =' link_to lemma, synset_path(hypernym.id, origin_lemma: lemma), class: current_cycle

      - if @synset.hyponyms.present?
        h5 More specific
        ol
          - @synset.hyponyms.each do |hyponym|
            - cycle("asbestos", "midnight-blue")
            li class=current_cycle
              ul.inline
                - hyponym.lemmas.each do |lemma|
                  li
                    =' link_to lemma, synset_path(hyponym.id, origin_lemma: lemma), class: current_cycle

      - if @synset.sister_words.present?
        h5 Related
        ol
          - @synset.sister_words.each do |sister_word|
            - cycle("asbestos", "midnight-blue")
            li class=current_cycle
              ul.inline
                - sister_word.lemmas.each do |lemma|
                  li
                    =' link_to lemma, synset_path(sister_word.id, origin_lemma: lemma), class: current_cycle

  .span4.offset1#vocab_sidebar
    .pull-right
      .row-fluid
        h5 Vocabularies
        hr
        - @synset.lemmas.map { |lemma| current_user.vocabularies.for_lemma(@synset.id, lemma) }.flatten.each do |vocabulary|
          h4= link_to vocabulary.title, vocabulary
          ul.unstyled
            - (vocabulary.words.pluck(:lemma) & @synset.lemmas).sort.each do |lemma|
              li= lemma
          hr

        .row-fluid
            h5
              ul.inline
                li= image_tag "wpicon.png", style: "width:2.0em; height:2.0em"
                li Suggestions
            - if @synset.suggestions.exists?
              ol
                - @synset.suggestions.map(&:destination).each do |destination|
                  - cycle("asbestos", "midnight-blue")
                  li class=current_cycle
                    ul.inline
                      - destination.lemmas.each do |lemma|
                        li
                          =' link_to lemma, synset_path(destination.id, origin_lemma: lemma), class: current_cycle
            - else
              p
                - if SuggestionAttempt.exists?(synset_id: @synset.id)
                  'Hang tight! Suggestions are being generated.
                - else
                  'No suggestions yet.
                  = link_to 'Request some', suggestion_path(id: @synset.id), method: :post
